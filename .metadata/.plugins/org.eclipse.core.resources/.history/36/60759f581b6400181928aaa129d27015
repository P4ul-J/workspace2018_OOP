/*!\file CTrieEnc.cpp
 * \brief
 *
 *  Created on: 29.05.2018
 *      Author: diamo
 */

#include "CTrieEnc.hpp"

CTrieEnc::CTrieEnc() {
//	char letter{0};
//
//		for(m_index = 0; m_index < 256; m_index++, letter++){
//			m_symbolTable[ charToInt(letter) ].setSymbol( intToString( charToInt(letter) ) );
//		}
	m_symbolTable = new CKnot[256];
	for(int i = 0; i < 256 ; i++){
		m_symbolTable[i].setSymbol(intToString(i));
		m_symbolTable[i].setParent(-1);
	}

}

std::vector<unsigned int> CTrieEnc::encode (const std::string& in){
	std::vector<unsigned int> send;
	CForwardCounter attemptCounter;
	CDoubleHashing hash = CDoubleHashing::getInstance();
	int I, J;//I Parent-address, J char
	if(in == "")return send;

	for(std::string::const_iterator it = ++in.begin(); it != in.end(); ++it){
		J = *it;

	}

	return send;
}

